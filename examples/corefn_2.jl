# [(NonRec (Ann { sourceSpan: (SourceSpan { spanName: "src/Main.purs", spanStart: (SourcePos { sourcePosLine: 3, sourcePosColumn: 1 }), spanEnd: (SourcePos { sourcePosLine: 3, sourcePosColumn: 48 }) }), comments: [], type: Nothing, meta: Nothing }) (Ident "Point") (Constructor (Ann { sourceSpan: (SourceSpan { spanName: "src/Main.purs", spanStart: (SourcePos { sourcePosLine: 3, sourcePosColumn: 1 }), spanEnd: (SourcePos { sourcePosLine: 3, sourcePosColumn: 48 }) }), comments: [], type: Nothing, meta: Nothing }) (ProperName "Point") (ProperName "Point") [(Ident "value0")])),(NonRec (Ann { sourceSpan: (SourceSpan { spanName: "src/Main.purs", spanStart: (SourcePos { sourcePosLine: 7, sourcePosColumn: 1 }), spanEnd: (SourcePos { sourcePosLine: 7, sourcePosColumn: 39 }) }), comments: [], type: Nothing, meta: Nothing }) (Ident "Percentage") (Abs (Ann { sourceSpan: (SourceSpan { spanName: "src/Main.purs", spanStart: (SourcePos { sourcePosLine: 7, sourcePosColumn: 1 }), spanEnd: (SourcePos { sourcePosLine: 7, sourcePosColumn: 39 }) }), comments: [], type: Nothing, meta: (Just IsNewtype) }) (Ident "x") (Var (Ann { sourceSpan: (SourceSpan { spanName: "src/Main.purs", spanStart: (SourcePos { sourcePosLine: 7, sourcePosColumn: 1 }), spanEnd: (SourcePos { sourcePosLine: 7, sourcePosColumn: 39 }) }), comments: [], type: Nothing, meta: Nothing }) (Qualified Nothing (Ident "x"))))),(NonRec (Ann { sourceSpan: (SourceSpan { spanName: "src/Main.purs", spanStart: (SourcePos { sourcePosLine: 5, sourcePosColumn: 1 }), spanEnd: (SourcePos { sourcePosLine: 5, sourcePosColumn: 28 }) }), comments: [], type: Nothing, meta: Nothing }) (Ident "Foo") (Constructor (Ann { sourceSpan: (SourceSpan { spanName: "src/Main.purs", spanStart: (SourcePos { sourcePosLine: 5, sourcePosColumn: 1 }), spanEnd: (SourcePos { sourcePosLine: 5, sourcePosColumn: 28 }) }), comments: [], type: Nothing, meta: Nothing }) (ProperName "Foo") (ProperName "Foo") [])),(NonRec (Ann { sourceSpan: (SourceSpan { spanName: "src/Main.purs", spanStart: (SourcePos { sourcePosLine: 5, sourcePosColumn: 1 }), spanEnd: (SourcePos { sourcePosLine: 5, sourcePosColumn: 28 }) }), comments: [], type: Nothing, meta: Nothing }) (Ident "Bar") (Constructor (Ann { sourceSpan: (SourceSpan { spanName: "src/Main.purs", spanStart: (SourcePos { sourcePosLine: 5, sourcePosColumn: 1 }), spanEnd: (SourcePos { sourcePosLine: 5, sourcePosColumn: 28 }) }), comments: [], type: Nothing, meta: Nothing }) (ProperName "Foo") (ProperName "Bar") [(Ident "value0")])),(NonRec (Ann { sourceSpan: (SourceSpan { spanName: "src/Main.purs", spanStart: (SourcePos { sourcePosLine: 9, sourcePosColumn: 1 }), spanEnd: (SourcePos { sourcePosLine: 9, sourcePosColumn: 35 }) }), comments: [], type: Nothing, meta: Nothing }) (Ident "point") (Abs (Ann { sourceSpan: (SourceSpan { spanName: "src/Main.purs", spanStart: (SourcePos { sourcePosLine: 9, sourcePosColumn: 1 }), spanEnd: (SourcePos { sourcePosLine: 9, sourcePosColumn: 35 }) }), comments: [], type: Nothing, meta: Nothing }) (Ident "x") (Abs (Ann { sourceSpan: (SourceSpan { spanName: "src/Main.purs", spanStart: (SourcePos { sourcePosLine: 9, sourcePosColumn: 1 }), spanEnd: (SourcePos { sourcePosLine: 9, sourcePosColumn: 35 }) }), comments: [], type: Nothing, meta: Nothing }) (Ident "y") (App (Ann { sourceSpan: (SourceSpan { spanName: "src/Main.purs", spanStart: (SourcePos { sourcePosLine: 10, sourcePosColumn: 13 }), spanEnd: (SourcePos { sourcePosLine: 10, sourcePosColumn: 33 }) }), comments: [], type: Nothing, meta: Nothing }) (Var (Ann { sourceSpan: (SourceSpan { spanName: "src/Main.purs", spanStart: (SourcePos { sourcePosLine: 10, sourcePosColumn: 13 }), spanEnd: (SourcePos { sourcePosLine: 10, sourcePosColumn: 18 }) }), comments: [], type: Nothing, meta: (Just (IsConstructor ProductType [(Ident "value0")])) }) (Qualified (Just (ModuleName [(ProperName "Main")])) (Ident "Point"))) (Literal (Ann { sourceSpan: (SourceSpan { spanName: "src/Main.purs", spanStart: (SourcePos { sourcePosLine: 10, sourcePosColumn: 19 }), spanEnd: (SourcePos { sourcePosLine: 10, sourcePosColumn: 33 }) }), comments: [], type: Nothing, meta: Nothing }) (ObjectLiteral[(Tuple "x" (Var (Ann { sourceSpan: (SourceSpan { spanName: "src/Main.purs", spanStart: (SourcePos { sourcePosLine: 10, sourcePosColumn: 24 }), spanEnd: (SourcePos { sourcePosLine: 10, sourcePosColumn: 25 }) }), comments: [], type: Nothing, meta: Nothing }) (Qualified Nothing (Ident "x")))),(Tuple "y" (Var (Ann { sourceSpan: (SourceSpan { spanName: "src/Main.purs", spanStart: (SourcePos { sourcePosLine: 10, sourcePosColumn: 30 }), spanEnd: (SourcePos { sourcePosLine: 10, sourcePosColumn: 31 }) }), comments: [], type: Nothing, meta: Nothing }) (Qualified Nothing (Ident "y"))))]))))))]
# version 0.13.8
# path src/Main.purs
module  Main
# import Main, Prim
export Point, Foo, Bar, Percentage, point
struct Point
value0
end
Percentage = (x -> x)
struct Foo end
struct Bar
value0
end
point = (x -> (y -> Point(Dict([("x", x), ("y", y)]))))
end